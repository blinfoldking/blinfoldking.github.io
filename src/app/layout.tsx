"use client";

import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import "./globals.css";
import useNavigation from "@/hook/useNavigation";
import React from "react";
import { FaPalette, FaHouse, FaUser, FaPencil } from "react-icons/fa6";

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

// export const metadata: Metadata = {
//   title: "Create Next App",
//   description: "Generated by create next app",
// };

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  const { navigate, pathname } = useNavigation();

  return (
    <html lang="en">
      <head>
        <link rel="icon" href="/favicon-32x32.ico" sizes="any" />
      </head>
      <body
        className={`${geistSans.variable} ${geistMono.variable} antialiased w-[100vw] h-[100vh] pt-4 pb-4 pl-12 `}
      >
        <div className="absolute left-0 top-0 h-[100%] w-[45px]">
          <div className="flex flex-col items-center pt-10 gap-4 absolute justify-center w-[100%]">
            {[
              { elem: FaHouse, path: "/" },
              {
                elem: FaUser,
                path: "/about",
              },
              { elem: FaPencil, path: "/blog" },
              { elem: FaPalette, path: "/projects" },
            ].map((item) => (
              <a
                key={item.path}
                onClick={() => navigate(item.path)}
                className={`h-[30px] w-[30px] flex hover:bg-black ${item.path === pathname ? "bg-black" : ""} rounded-full`}
              >
                <div className="w-[30px] h-[30px] flex justify-center items-center">
                  {
                    <item.elem
                      className={`hover:text-white ${item.path === pathname ? "text-white" : ""}`}
                    ></item.elem>
                  }
                </div>
                <div className="ml-4 hidden group-hover:block">pathname</div>
              </a>
            ))}
          </div>
          <div className="flex flex-col justify-center items-center h-[100%]">
            <div className="rotate-270 text-gray-500">
              <a className="font-epetri" onClick={() => navigate("/")}>
                blinfoldking
              </a>
            </div>
          </div>
        </div>
        <div className="border-black rounded-bl-xl rounded-tl-xl min-w-[100%] h-[100%] bg-gray-50 overflow-hidden p-4  inset-shadow-md">
          {children}
        </div>
      </body>
    </html>
  );
}
